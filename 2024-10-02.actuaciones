0
1000
1000
1000
1000
1000
1000
1000
1000
1000
no hay saved date o la saved date es menor que incoming date
error al cambiar la carpeta y actualizar la ultima actuacion: PrismaClientValidationError: 
Invalid `prisma_1.client.carpeta.update()` invocation in
/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:108:39

  105 }
  106 async function updateCarpetaWithNewLastActuacion([object Object], ultimaActuacion,[object Object], numero,[object Object], id,[object Object], ,[object Object]) {
  107     try {
→ 108         await prisma_1.client.carpeta.update({
                where: {
                  mainId: {
                  ~~~~~~
                    numero: 25,
                    id: 3197274
                  },
              ?   numero?: Int,
              ?   AND?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   OR?: CarpetaWhereInput[],
              ?   NOT?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   id?: IntFilter | Int,
              ?   fecha?: DateTimeNullableFilter | DateTime | Null,
              ?   idProcesos?: IntNullableListFilter,
              ?   idRegUltimaAct?: IntNullableFilter | Int | Null,
              ?   llaveProceso?: StringFilter | String,
              ?   nombre?: StringFilter | String,
              ?   revisado?: BoolFilter | Boolean,
              ?   terminado?: BoolFilter | Boolean,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   category?: StringFilter | String,
              ?   tipoProceso?: StringFilter | String,
              ?   notasCount?: IntNullableFilter | Int | Null,
              ?   fechaUltimaRevision?: DateTimeNullableFilter | DateTime | Null,
              ?   ciudad?: StringNullableFilter | String | Null,
              ?   juzgadoTipo?: StringNullableFilter | String | Null,
              ?   juzgadoCiudad?: StringNullableFilter | String | Null,
              ?   juzgadoId?: StringNullableFilter | String | Null,
              ?   ultimaActuacion?: ActuacionNullableRelationFilter | ActuacionWhereInput | Null,
              ?   juzgado?: JuzgadoNullableRelationFilter | JuzgadoWhereInput | Null,
              ?   codeudor?: CodeudorNullableRelationFilter | CodeudorWhereInput | Null,
              ?   demanda?: DemandaNullableRelationFilter | DemandaWhereInput | Null,
              ?   deudor?: DeudorNullableRelationFilter | DeudorWhereInput | Null,
              ?   facturas?: FacturaListRelationFilter,
              ?   notas?: NotaListRelationFilter,
              ?   procesos?: ProcesoListRelationFilter,
              ?   tareas?: TaskListRelationFilter
                },
                data: {
                  fecha: new Date("2024-10-01T05:00:00.000Z"),
                  revisado: false,
                  ultimaActuacion: {
                    connectOrCreate: {
                      where: {
                        idRegActuacion: 1198263234
                      },
                      create: {
                        idRegActuacion: 1198263234,
                        llaveProceso: "11001310301120170033500",
                        consActuacion: 111,
                        fechaActuacion: new Date("2024-10-01T05:00:00.000Z"),
                        actuacion: "Recepción memorial",
                        anotacion: "Radicado No. 9543-2024, Entidad o Señor(a): CARMEN RAMIREZ MUÑOZ - Tercer Interesado, Aportó Documento: Memorial, Con La Solucitud: Otro, Observaciones: SOLICITUD AMPLIAR MEDIDAS\r\nDe: R & S ASESORIA JURIDICA SAS <REMIRO>\r\nEnviado: martes, 24 de septiembre de 2024 14:19\r\n\r\n11001310301120170033500 JDO 1 // JG // FL. 2",
                        fechaInicial: null,
                        fechaFinal: null,
                        fechaRegistro: new Date("2024-10-01T05:00:00.000Z"),
                        codRegla: "00                              ",
                        conDocumentos: false,
                        cant: 111,
                        isUltimaAct: true,
                        idProceso: 1805257424,
                        createdAt: new Date("2024-10-01T05:00:00.000Z")
                      }
                    }
                  }
                }
              })

Unknown argument `mainId`. Available options are listed in green.
1000
1000
1000
1000
Error: 81869251: 500 Internal Server Error{}
    at fetcher (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:35:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async AsyncGenerateActuaciones (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:77:34)
    at async main (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:185:22)
1000
1000
1000
1000
1000
1000
1000
Error: 86212261: 500 Internal Server Error{}
    at fetcher (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:35:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async AsyncGenerateActuaciones (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:77:34)
    at async main (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:185:22)
1000
no hay saved date o la saved date es menor que incoming date
error al cambiar la carpeta y actualizar la ultima actuacion: PrismaClientValidationError: 
Invalid `prisma_1.client.carpeta.update()` invocation in
/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:108:39

  105 }
  106 async function updateCarpetaWithNewLastActuacion([object Object], ultimaActuacion,[object Object], numero,[object Object], id,[object Object], ,[object Object]) {
  107     try {
→ 108         await prisma_1.client.carpeta.update({
                where: {
                  mainId: {
                  ~~~~~~
                    numero: 47,
                    id: 52129551
                  },
              ?   numero?: Int,
              ?   AND?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   OR?: CarpetaWhereInput[],
              ?   NOT?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   id?: IntFilter | Int,
              ?   fecha?: DateTimeNullableFilter | DateTime | Null,
              ?   idProcesos?: IntNullableListFilter,
              ?   idRegUltimaAct?: IntNullableFilter | Int | Null,
              ?   llaveProceso?: StringFilter | String,
              ?   nombre?: StringFilter | String,
              ?   revisado?: BoolFilter | Boolean,
              ?   terminado?: BoolFilter | Boolean,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   category?: StringFilter | String,
              ?   tipoProceso?: StringFilter | String,
              ?   notasCount?: IntNullableFilter | Int | Null,
              ?   fechaUltimaRevision?: DateTimeNullableFilter | DateTime | Null,
              ?   ciudad?: StringNullableFilter | String | Null,
              ?   juzgadoTipo?: StringNullableFilter | String | Null,
              ?   juzgadoCiudad?: StringNullableFilter | String | Null,
              ?   juzgadoId?: StringNullableFilter | String | Null,
              ?   ultimaActuacion?: ActuacionNullableRelationFilter | ActuacionWhereInput | Null,
              ?   juzgado?: JuzgadoNullableRelationFilter | JuzgadoWhereInput | Null,
              ?   codeudor?: CodeudorNullableRelationFilter | CodeudorWhereInput | Null,
              ?   demanda?: DemandaNullableRelationFilter | DemandaWhereInput | Null,
              ?   deudor?: DeudorNullableRelationFilter | DeudorWhereInput | Null,
              ?   facturas?: FacturaListRelationFilter,
              ?   notas?: NotaListRelationFilter,
              ?   procesos?: ProcesoListRelationFilter,
              ?   tareas?: TaskListRelationFilter
                },
                data: {
                  fecha: new Date("2024-10-01T05:00:00.000Z"),
                  revisado: false,
                  ultimaActuacion: {
                    connectOrCreate: {
                      where: {
                        idRegActuacion: 2031922760
                      },
                      create: {
                        idRegActuacion: 2031922760,
                        llaveProceso: "11001400300620170030200",
                        consActuacion: 101,
                        fechaActuacion: new Date("2024-10-01T05:00:00.000Z"),
                        actuacion: "Constancia secretarial",
                        anotacion: "SE RECIBE PROCESO EN SECRETARÍA POR ESTADO DEL 01/10/2024- PASA AL ÁREA DE OFICIOS PARA LO PERTINENTE // LAURA BAQUERO Y DIEGO A.// P. HÍBRIDO //",
                        fechaInicial: null,
                        fechaFinal: null,
                        fechaRegistro: new Date("2024-10-01T05:00:00.000Z"),
                        codRegla: "00                              ",
                        conDocumentos: false,
                        cant: 101,
                        isUltimaAct: true,
                        idProceso: 50521190,
                        createdAt: new Date("2024-10-01T05:00:00.000Z")
                      }
                    }
                  }
                }
              })

Unknown argument `mainId`. Available options are listed in green.
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
prisma updater actuaciones error : TypeError: Cannot read properties of undefined (reading 'llaveProceso')
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
Error: 113956611: 500 Internal Server Error{}
    at fetcher (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:35:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async AsyncGenerateActuaciones (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:77:34)
    at async main (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:185:22)
1000
1000
Error: 81869501: 500 Internal Server Error{}
    at fetcher (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:35:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async AsyncGenerateActuaciones (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:77:34)
    at async main (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:185:22)
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
prisma updater actuaciones error : TypeError: Cannot read properties of undefined (reading 'llaveProceso')
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
no hay saved date o la saved date es menor que incoming date
error al cambiar la carpeta y actualizar la ultima actuacion: PrismaClientValidationError: 
Invalid `prisma_1.client.carpeta.update()` invocation in
/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:108:39

  105 }
  106 async function updateCarpetaWithNewLastActuacion([object Object], ultimaActuacion,[object Object], numero,[object Object], id,[object Object], ,[object Object]) {
  107     try {
→ 108         await prisma_1.client.carpeta.update({
                where: {
                  mainId: {
                  ~~~~~~
                    numero: 140,
                    id: 80933170
                  },
              ?   numero?: Int,
              ?   AND?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   OR?: CarpetaWhereInput[],
              ?   NOT?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   id?: IntFilter | Int,
              ?   fecha?: DateTimeNullableFilter | DateTime | Null,
              ?   idProcesos?: IntNullableListFilter,
              ?   idRegUltimaAct?: IntNullableFilter | Int | Null,
              ?   llaveProceso?: StringFilter | String,
              ?   nombre?: StringFilter | String,
              ?   revisado?: BoolFilter | Boolean,
              ?   terminado?: BoolFilter | Boolean,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   category?: StringFilter | String,
              ?   tipoProceso?: StringFilter | String,
              ?   notasCount?: IntNullableFilter | Int | Null,
              ?   fechaUltimaRevision?: DateTimeNullableFilter | DateTime | Null,
              ?   ciudad?: StringNullableFilter | String | Null,
              ?   juzgadoTipo?: StringNullableFilter | String | Null,
              ?   juzgadoCiudad?: StringNullableFilter | String | Null,
              ?   juzgadoId?: StringNullableFilter | String | Null,
              ?   ultimaActuacion?: ActuacionNullableRelationFilter | ActuacionWhereInput | Null,
              ?   juzgado?: JuzgadoNullableRelationFilter | JuzgadoWhereInput | Null,
              ?   codeudor?: CodeudorNullableRelationFilter | CodeudorWhereInput | Null,
              ?   demanda?: DemandaNullableRelationFilter | DemandaWhereInput | Null,
              ?   deudor?: DeudorNullableRelationFilter | DeudorWhereInput | Null,
              ?   facturas?: FacturaListRelationFilter,
              ?   notas?: NotaListRelationFilter,
              ?   procesos?: ProcesoListRelationFilter,
              ?   tareas?: TaskListRelationFilter
                },
                data: {
                  fecha: new Date("2024-10-02T05:00:00.000Z"),
                  revisado: false,
                  ultimaActuacion: {
                    connectOrCreate: {
                      where: {
                        idRegActuacion: 2031441110
                      },
                      create: {
                        idRegActuacion: 2031441110,
                        llaveProceso: "11001400307720170056800",
                        consActuacion: 126,
                        fechaActuacion: new Date("2024-10-02T05:00:00.000Z"),
                        actuacion: "Al despacho",
                        anotacion: "(FIL543)  FIJAR FECHA DE REMATE Y OTROS   // 1 CDNO // DianaAguilar",
                        fechaInicial: null,
                        fechaFinal: null,
                        fechaRegistro: new Date("2024-10-01T05:00:00.000Z"),
                        codRegla: "00                              ",
                        conDocumentos: false,
                        cant: 126,
                        isUltimaAct: true,
                        idProceso: 50921080,
                        createdAt: new Date("2024-10-01T05:00:00.000Z")
                      }
                    }
                  }
                }
              })

Unknown argument `mainId`. Available options are listed in green.
1000
1000
1000
prisma updater actuaciones error : TypeError: Cannot read properties of undefined (reading 'llaveProceso')
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
Error: 86374941: 500 Internal Server Error{}
    at fetcher (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:35:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async AsyncGenerateActuaciones (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:77:34)
    at async main (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:185:22)
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
no hay saved date o la saved date es menor que incoming date
error al cambiar la carpeta y actualizar la ultima actuacion: PrismaClientValidationError: 
Invalid `prisma_1.client.carpeta.update()` invocation in
/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:108:39

  105 }
  106 async function updateCarpetaWithNewLastActuacion([object Object], ultimaActuacion,[object Object], numero,[object Object], id,[object Object], ,[object Object]) {
  107     try {
→ 108         await prisma_1.client.carpeta.update({
                where: {
                  mainId: {
                  ~~~~~~
                    numero: 251,
                    id: 7226283
                  },
              ?   numero?: Int,
              ?   AND?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   OR?: CarpetaWhereInput[],
              ?   NOT?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   id?: IntFilter | Int,
              ?   fecha?: DateTimeNullableFilter | DateTime | Null,
              ?   idProcesos?: IntNullableListFilter,
              ?   idRegUltimaAct?: IntNullableFilter | Int | Null,
              ?   llaveProceso?: StringFilter | String,
              ?   nombre?: StringFilter | String,
              ?   revisado?: BoolFilter | Boolean,
              ?   terminado?: BoolFilter | Boolean,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   category?: StringFilter | String,
              ?   tipoProceso?: StringFilter | String,
              ?   notasCount?: IntNullableFilter | Int | Null,
              ?   fechaUltimaRevision?: DateTimeNullableFilter | DateTime | Null,
              ?   ciudad?: StringNullableFilter | String | Null,
              ?   juzgadoTipo?: StringNullableFilter | String | Null,
              ?   juzgadoCiudad?: StringNullableFilter | String | Null,
              ?   juzgadoId?: StringNullableFilter | String | Null,
              ?   ultimaActuacion?: ActuacionNullableRelationFilter | ActuacionWhereInput | Null,
              ?   juzgado?: JuzgadoNullableRelationFilter | JuzgadoWhereInput | Null,
              ?   codeudor?: CodeudorNullableRelationFilter | CodeudorWhereInput | Null,
              ?   demanda?: DemandaNullableRelationFilter | DemandaWhereInput | Null,
              ?   deudor?: DeudorNullableRelationFilter | DeudorWhereInput | Null,
              ?   facturas?: FacturaListRelationFilter,
              ?   notas?: NotaListRelationFilter,
              ?   procesos?: ProcesoListRelationFilter,
              ?   tareas?: TaskListRelationFilter
                },
                data: {
                  fecha: new Date("2024-10-04T05:00:00.000Z"),
                  revisado: false,
                  ultimaActuacion: {
                    connectOrCreate: {
                      where: {
                        idRegActuacion: 2032680840
                      },
                      create: {
                        idRegActuacion: 2032680840,
                        llaveProceso: "11001400301320170116200",
                        consActuacion: 132,
                        fechaActuacion: new Date("2024-10-04T05:00:00.000Z"),
                        actuacion: "Al despacho",
                        anotacion: "PROCESO INGRESA AL DESPACHO  // JOSE ROJAS ",
                        fechaInicial: null,
                        fechaFinal: null,
                        fechaRegistro: new Date("2024-10-02T05:00:00.000Z"),
                        codRegla: "00                              ",
                        conDocumentos: false,
                        cant: 132,
                        isUltimaAct: true,
                        idProceso: 50685530,
                        createdAt: new Date("2024-10-02T05:00:00.000Z")
                      }
                    }
                  }
                }
              })

Unknown argument `mainId`. Available options are listed in green.
1000
1000
1000
1000
1000
1000
1000
1000
Error: 81621491: 500 Internal Server Error{}
    at fetcher (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:35:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async AsyncGenerateActuaciones (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:77:34)
    at async main (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:185:22)
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
Error: 127748331: 500 Internal Server Error{}
    at fetcher (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:35:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async AsyncGenerateActuaciones (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:77:34)
    at async main (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:185:22)
1000
1000
1000
prisma updater actuaciones error : TypeError: Cannot read properties of undefined (reading 'llaveProceso')
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
prisma updater actuaciones error : TypeError: Cannot read properties of undefined (reading 'llaveProceso')
1000
1000
1000
1000
1000
1000
1000
1000
1000
prisma updater actuaciones error : TypeError: Cannot read properties of undefined (reading 'llaveProceso')
1000
1000
1000
1000
1000
Error: 81806941: 500 Internal Server Error{}
    at fetcher (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:35:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async AsyncGenerateActuaciones (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:77:34)
    at async main (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:185:22)
1000
1000
Error: 81806941: 500 Internal Server Error{}
    at fetcher (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:35:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async AsyncGenerateActuaciones (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:77:34)
    at async main (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:185:22)
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
Error: 86157021: 500 Internal Server Error{}
    at fetcher (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:35:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async AsyncGenerateActuaciones (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:77:34)
    at async main (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:185:22)
1000
1000
1000
no hay saved date o la saved date es menor que incoming date
error al cambiar la carpeta y actualizar la ultima actuacion: PrismaClientValidationError: 
Invalid `prisma_1.client.carpeta.update()` invocation in
/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:108:39

  105 }
  106 async function updateCarpetaWithNewLastActuacion([object Object], ultimaActuacion,[object Object], numero,[object Object], id,[object Object], ,[object Object]) {
  107     try {
→ 108         await prisma_1.client.carpeta.update({
                where: {
                  mainId: {
                  ~~~~~~
                    numero: 430,
                    id: 1024517216
                  },
              ?   numero?: Int,
              ?   AND?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   OR?: CarpetaWhereInput[],
              ?   NOT?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   id?: IntFilter | Int,
              ?   fecha?: DateTimeNullableFilter | DateTime | Null,
              ?   idProcesos?: IntNullableListFilter,
              ?   idRegUltimaAct?: IntNullableFilter | Int | Null,
              ?   llaveProceso?: StringFilter | String,
              ?   nombre?: StringFilter | String,
              ?   revisado?: BoolFilter | Boolean,
              ?   terminado?: BoolFilter | Boolean,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   category?: StringFilter | String,
              ?   tipoProceso?: StringFilter | String,
              ?   notasCount?: IntNullableFilter | Int | Null,
              ?   fechaUltimaRevision?: DateTimeNullableFilter | DateTime | Null,
              ?   ciudad?: StringNullableFilter | String | Null,
              ?   juzgadoTipo?: StringNullableFilter | String | Null,
              ?   juzgadoCiudad?: StringNullableFilter | String | Null,
              ?   juzgadoId?: StringNullableFilter | String | Null,
              ?   ultimaActuacion?: ActuacionNullableRelationFilter | ActuacionWhereInput | Null,
              ?   juzgado?: JuzgadoNullableRelationFilter | JuzgadoWhereInput | Null,
              ?   codeudor?: CodeudorNullableRelationFilter | CodeudorWhereInput | Null,
              ?   demanda?: DemandaNullableRelationFilter | DemandaWhereInput | Null,
              ?   deudor?: DeudorNullableRelationFilter | DeudorWhereInput | Null,
              ?   facturas?: FacturaListRelationFilter,
              ?   notas?: NotaListRelationFilter,
              ?   procesos?: ProcesoListRelationFilter,
              ?   tareas?: TaskListRelationFilter
                },
                data: {
                  fecha: new Date("2019-12-19T05:00:00.000Z"),
                  revisado: false,
                  ultimaActuacion: {
                    connectOrCreate: {
                      where: {
                        idRegActuacion: 909598440
                      },
                      create: {
                        idRegActuacion: 909598440,
                        llaveProceso: "11001410300120180040400",
                        consActuacion: 46,
                        fechaActuacion: new Date("2019-12-19T05:00:00.000Z"),
                        actuacion: "Archivo Definitivo",
                        anotacion: "CAJA 150 DE 2019\r\n",
                        fechaInicial: null,
                        fechaFinal: null,
                        fechaRegistro: new Date("2019-12-19T05:00:00.000Z"),
                        codRegla: "00                              ",
                        conDocumentos: false,
                        cant: 46,
                        isUltimaAct: true,
                        idProceso: 17487020,
                        createdAt: new Date("2019-12-19T05:00:00.000Z")
                      }
                    }
                  }
                }
              })

Unknown argument `mainId`. Available options are listed in green.
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
prisma updater actuaciones error : TypeError: Cannot read properties of undefined (reading 'llaveProceso')
1000
1000
1000
1000
1000
1000
prisma updater actuaciones error : TypeError: Cannot read properties of undefined (reading 'llaveProceso')
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
Error: 114399551: 500 Internal Server Error{}
    at fetcher (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:35:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async AsyncGenerateActuaciones (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:77:34)
    at async main (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:185:22)
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
prisma updater actuaciones error : TypeError: Cannot read properties of undefined (reading 'llaveProceso')
1000
1000
1000
1000
1000
no hay saved date o la saved date es menor que incoming date
error al cambiar la carpeta y actualizar la ultima actuacion: PrismaClientValidationError: 
Invalid `prisma_1.client.carpeta.update()` invocation in
/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:108:39

  105 }
  106 async function updateCarpetaWithNewLastActuacion([object Object], ultimaActuacion,[object Object], numero,[object Object], id,[object Object], ,[object Object]) {
  107     try {
→ 108         await prisma_1.client.carpeta.update({
                where: {
                  mainId: {
                  ~~~~~~
                    numero: 541,
                    id: 79533771
                  },
              ?   numero?: Int,
              ?   AND?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   OR?: CarpetaWhereInput[],
              ?   NOT?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   id?: IntFilter | Int,
              ?   fecha?: DateTimeNullableFilter | DateTime | Null,
              ?   idProcesos?: IntNullableListFilter,
              ?   idRegUltimaAct?: IntNullableFilter | Int | Null,
              ?   llaveProceso?: StringFilter | String,
              ?   nombre?: StringFilter | String,
              ?   revisado?: BoolFilter | Boolean,
              ?   terminado?: BoolFilter | Boolean,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   category?: StringFilter | String,
              ?   tipoProceso?: StringFilter | String,
              ?   notasCount?: IntNullableFilter | Int | Null,
              ?   fechaUltimaRevision?: DateTimeNullableFilter | DateTime | Null,
              ?   ciudad?: StringNullableFilter | String | Null,
              ?   juzgadoTipo?: StringNullableFilter | String | Null,
              ?   juzgadoCiudad?: StringNullableFilter | String | Null,
              ?   juzgadoId?: StringNullableFilter | String | Null,
              ?   ultimaActuacion?: ActuacionNullableRelationFilter | ActuacionWhereInput | Null,
              ?   juzgado?: JuzgadoNullableRelationFilter | JuzgadoWhereInput | Null,
              ?   codeudor?: CodeudorNullableRelationFilter | CodeudorWhereInput | Null,
              ?   demanda?: DemandaNullableRelationFilter | DemandaWhereInput | Null,
              ?   deudor?: DeudorNullableRelationFilter | DeudorWhereInput | Null,
              ?   facturas?: FacturaListRelationFilter,
              ?   notas?: NotaListRelationFilter,
              ?   procesos?: ProcesoListRelationFilter,
              ?   tareas?: TaskListRelationFilter
                },
                data: {
                  fecha: new Date("2024-10-01T05:00:00.000Z"),
                  revisado: false,
                  ultimaActuacion: {
                    connectOrCreate: {
                      where: {
                        idRegActuacion: 2031500210
                      },
                      create: {
                        idRegActuacion: 2031500210,
                        llaveProceso: "11001400308220180096400",
                        consActuacion: 76,
                        fechaActuacion: new Date("2024-10-01T05:00:00.000Z"),
                        actuacion: "Recepción memorial",
                        anotacion: "Radicado No. 8391-2024, No. Reloj Radicador: 41813, Entidad o Señor(a): REINTREGA SAS - Tercer Interesado, Aportó Documento: Memorial, Con La Solucitud: Otras, Observaciones: CESIÓN",
                        fechaInicial: null,
                        fechaFinal: null,
                        fechaRegistro: new Date("2024-10-01T05:00:00.000Z"),
                        codRegla: "00                              ",
                        conDocumentos: false,
                        cant: 76,
                        isUltimaAct: true,
                        idProceso: 52160520,
                        createdAt: new Date("2024-10-01T05:00:00.000Z")
                      }
                    }
                  }
                }
              })

Unknown argument `mainId`. Available options are listed in green.
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
no hay saved date o la saved date es menor que incoming date
error al cambiar la carpeta y actualizar la ultima actuacion: PrismaClientValidationError: 
Invalid `prisma_1.client.carpeta.update()` invocation in
/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:108:39

  105 }
  106 async function updateCarpetaWithNewLastActuacion([object Object], ultimaActuacion,[object Object], numero,[object Object], id,[object Object], ,[object Object]) {
  107     try {
→ 108         await prisma_1.client.carpeta.update({
                where: {
                  mainId: {
                  ~~~~~~
                    numero: 579,
                    id: 1068973010
                  },
              ?   numero?: Int,
              ?   AND?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   OR?: CarpetaWhereInput[],
              ?   NOT?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   id?: IntFilter | Int,
              ?   fecha?: DateTimeNullableFilter | DateTime | Null,
              ?   idProcesos?: IntNullableListFilter,
              ?   idRegUltimaAct?: IntNullableFilter | Int | Null,
              ?   llaveProceso?: StringFilter | String,
              ?   nombre?: StringFilter | String,
              ?   revisado?: BoolFilter | Boolean,
              ?   terminado?: BoolFilter | Boolean,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   category?: StringFilter | String,
              ?   tipoProceso?: StringFilter | String,
              ?   notasCount?: IntNullableFilter | Int | Null,
              ?   fechaUltimaRevision?: DateTimeNullableFilter | DateTime | Null,
              ?   ciudad?: StringNullableFilter | String | Null,
              ?   juzgadoTipo?: StringNullableFilter | String | Null,
              ?   juzgadoCiudad?: StringNullableFilter | String | Null,
              ?   juzgadoId?: StringNullableFilter | String | Null,
              ?   ultimaActuacion?: ActuacionNullableRelationFilter | ActuacionWhereInput | Null,
              ?   juzgado?: JuzgadoNullableRelationFilter | JuzgadoWhereInput | Null,
              ?   codeudor?: CodeudorNullableRelationFilter | CodeudorWhereInput | Null,
              ?   demanda?: DemandaNullableRelationFilter | DemandaWhereInput | Null,
              ?   deudor?: DeudorNullableRelationFilter | DeudorWhereInput | Null,
              ?   facturas?: FacturaListRelationFilter,
              ?   notas?: NotaListRelationFilter,
              ?   procesos?: ProcesoListRelationFilter,
              ?   tareas?: TaskListRelationFilter
                },
                data: {
                  fecha: new Date("2024-10-01T05:00:00.000Z"),
                  revisado: false,
                  ultimaActuacion: {
                    connectOrCreate: {
                      where: {
                        idRegActuacion: 2031563210
                      },
                      create: {
                        idRegActuacion: 2031563210,
                        llaveProceso: "11001418904120230021200",
                        consActuacion: 20,
                        fechaActuacion: new Date("2024-10-01T05:00:00.000Z"),
                        actuacion: "Al despacho",
                        anotacion: null,
                        fechaInicial: null,
                        fechaFinal: null,
                        fechaRegistro: new Date("2024-10-01T05:00:00.000Z"),
                        codRegla: "00                              ",
                        conDocumentos: false,
                        cant: 20,
                        isUltimaAct: true,
                        idProceso: 132645230,
                        createdAt: new Date("2024-10-01T05:00:00.000Z")
                      }
                    }
                  }
                }
              })

Unknown argument `mainId`. Available options are listed in green.
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
no hay saved date o la saved date es menor que incoming date
error al cambiar la carpeta y actualizar la ultima actuacion: PrismaClientValidationError: 
Invalid `prisma_1.client.carpeta.update()` invocation in
/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:108:39

  105 }
  106 async function updateCarpetaWithNewLastActuacion([object Object], ultimaActuacion,[object Object], numero,[object Object], id,[object Object], ,[object Object]) {
  107     try {
→ 108         await prisma_1.client.carpeta.update({
                where: {
                  mainId: {
                  ~~~~~~
                    numero: 605,
                    id: 1032411438
                  },
              ?   numero?: Int,
              ?   AND?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   OR?: CarpetaWhereInput[],
              ?   NOT?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   id?: IntFilter | Int,
              ?   fecha?: DateTimeNullableFilter | DateTime | Null,
              ?   idProcesos?: IntNullableListFilter,
              ?   idRegUltimaAct?: IntNullableFilter | Int | Null,
              ?   llaveProceso?: StringFilter | String,
              ?   nombre?: StringFilter | String,
              ?   revisado?: BoolFilter | Boolean,
              ?   terminado?: BoolFilter | Boolean,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   category?: StringFilter | String,
              ?   tipoProceso?: StringFilter | String,
              ?   notasCount?: IntNullableFilter | Int | Null,
              ?   fechaUltimaRevision?: DateTimeNullableFilter | DateTime | Null,
              ?   ciudad?: StringNullableFilter | String | Null,
              ?   juzgadoTipo?: StringNullableFilter | String | Null,
              ?   juzgadoCiudad?: StringNullableFilter | String | Null,
              ?   juzgadoId?: StringNullableFilter | String | Null,
              ?   ultimaActuacion?: ActuacionNullableRelationFilter | ActuacionWhereInput | Null,
              ?   juzgado?: JuzgadoNullableRelationFilter | JuzgadoWhereInput | Null,
              ?   codeudor?: CodeudorNullableRelationFilter | CodeudorWhereInput | Null,
              ?   demanda?: DemandaNullableRelationFilter | DemandaWhereInput | Null,
              ?   deudor?: DeudorNullableRelationFilter | DeudorWhereInput | Null,
              ?   facturas?: FacturaListRelationFilter,
              ?   notas?: NotaListRelationFilter,
              ?   procesos?: ProcesoListRelationFilter,
              ?   tareas?: TaskListRelationFilter
                },
                data: {
                  fecha: new Date("2024-10-01T05:00:00.000Z"),
                  revisado: false,
                  ultimaActuacion: {
                    connectOrCreate: {
                      where: {
                        idRegActuacion: 1959619543
                      },
                      create: {
                        idRegActuacion: 1959619543,
                        llaveProceso: "15001405300320240029700",
                        consActuacion: 10,
                        fechaActuacion: new Date("2024-10-01T05:00:00.000Z"),
                        actuacion: "Al despacho",
                        anotacion: "PARA SUSTANCIAR.",
                        fechaInicial: null,
                        fechaFinal: null,
                        fechaRegistro: new Date("2024-10-01T05:00:00.000Z"),
                        codRegla: "00                              ",
                        conDocumentos: false,
                        cant: 10,
                        isUltimaAct: true,
                        idProceso: 133337293,
                        createdAt: new Date("2024-10-01T05:00:00.000Z")
                      }
                    }
                  }
                }
              })

Unknown argument `mainId`. Available options are listed in green.
1000
1000
1000
no hay saved date o la saved date es menor que incoming date
error al cambiar la carpeta y actualizar la ultima actuacion: PrismaClientValidationError: 
Invalid `prisma_1.client.carpeta.update()` invocation in
/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:108:39

  105 }
  106 async function updateCarpetaWithNewLastActuacion([object Object], ultimaActuacion,[object Object], numero,[object Object], id,[object Object], ,[object Object]) {
  107     try {
→ 108         await prisma_1.client.carpeta.update({
                where: {
                  mainId: {
                  ~~~~~~
                    numero: 609,
                    id: 79975835
                  },
              ?   numero?: Int,
              ?   AND?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   OR?: CarpetaWhereInput[],
              ?   NOT?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   id?: IntFilter | Int,
              ?   fecha?: DateTimeNullableFilter | DateTime | Null,
              ?   idProcesos?: IntNullableListFilter,
              ?   idRegUltimaAct?: IntNullableFilter | Int | Null,
              ?   llaveProceso?: StringFilter | String,
              ?   nombre?: StringFilter | String,
              ?   revisado?: BoolFilter | Boolean,
              ?   terminado?: BoolFilter | Boolean,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   category?: StringFilter | String,
              ?   tipoProceso?: StringFilter | String,
              ?   notasCount?: IntNullableFilter | Int | Null,
              ?   fechaUltimaRevision?: DateTimeNullableFilter | DateTime | Null,
              ?   ciudad?: StringNullableFilter | String | Null,
              ?   juzgadoTipo?: StringNullableFilter | String | Null,
              ?   juzgadoCiudad?: StringNullableFilter | String | Null,
              ?   juzgadoId?: StringNullableFilter | String | Null,
              ?   ultimaActuacion?: ActuacionNullableRelationFilter | ActuacionWhereInput | Null,
              ?   juzgado?: JuzgadoNullableRelationFilter | JuzgadoWhereInput | Null,
              ?   codeudor?: CodeudorNullableRelationFilter | CodeudorWhereInput | Null,
              ?   demanda?: DemandaNullableRelationFilter | DemandaWhereInput | Null,
              ?   deudor?: DeudorNullableRelationFilter | DeudorWhereInput | Null,
              ?   facturas?: FacturaListRelationFilter,
              ?   notas?: NotaListRelationFilter,
              ?   procesos?: ProcesoListRelationFilter,
              ?   tareas?: TaskListRelationFilter
                },
                data: {
                  fecha: new Date("2024-09-30T05:00:00.000Z"),
                  revisado: false,
                  ultimaActuacion: {
                    connectOrCreate: {
                      where: {
                        idRegActuacion: 2031795780
                      },
                      create: {
                        idRegActuacion: 2031795780,
                        llaveProceso: "11001400301020230121200",
                        consActuacion: 30,
                        fechaActuacion: new Date("2024-09-30T05:00:00.000Z"),
                        actuacion: "Fijacion estado",
                        anotacion: "Actuación registrada el 30/09/2024 a las 14:25:28.",
                        fechaInicial: new Date("2024-10-01T05:00:00.000Z"),
                        fechaFinal: new Date("2024-10-01T05:00:00.000Z"),
                        fechaRegistro: new Date("2024-09-30T05:00:00.000Z"),
                        codRegla: "00                              ",
                        conDocumentos: false,
                        cant: 30,
                        isUltimaAct: true,
                        idProceso: 137788650,
                        createdAt: new Date("2024-09-30T05:00:00.000Z")
                      }
                    }
                  }
                }
              })

Unknown argument `mainId`. Available options are listed in green.
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
no hay saved date o la saved date es menor que incoming date
error al cambiar la carpeta y actualizar la ultima actuacion: PrismaClientValidationError: 
Invalid `prisma_1.client.carpeta.update()` invocation in
/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:108:39

  105 }
  106 async function updateCarpetaWithNewLastActuacion([object Object], ultimaActuacion,[object Object], numero,[object Object], id,[object Object], ,[object Object]) {
  107     try {
→ 108         await prisma_1.client.carpeta.update({
                where: {
                  mainId: {
                  ~~~~~~
                    numero: 649,
                    id: 79797280
                  },
              ?   numero?: Int,
              ?   AND?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   OR?: CarpetaWhereInput[],
              ?   NOT?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   id?: IntFilter | Int,
              ?   fecha?: DateTimeNullableFilter | DateTime | Null,
              ?   idProcesos?: IntNullableListFilter,
              ?   idRegUltimaAct?: IntNullableFilter | Int | Null,
              ?   llaveProceso?: StringFilter | String,
              ?   nombre?: StringFilter | String,
              ?   revisado?: BoolFilter | Boolean,
              ?   terminado?: BoolFilter | Boolean,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   category?: StringFilter | String,
              ?   tipoProceso?: StringFilter | String,
              ?   notasCount?: IntNullableFilter | Int | Null,
              ?   fechaUltimaRevision?: DateTimeNullableFilter | DateTime | Null,
              ?   ciudad?: StringNullableFilter | String | Null,
              ?   juzgadoTipo?: StringNullableFilter | String | Null,
              ?   juzgadoCiudad?: StringNullableFilter | String | Null,
              ?   juzgadoId?: StringNullableFilter | String | Null,
              ?   ultimaActuacion?: ActuacionNullableRelationFilter | ActuacionWhereInput | Null,
              ?   juzgado?: JuzgadoNullableRelationFilter | JuzgadoWhereInput | Null,
              ?   codeudor?: CodeudorNullableRelationFilter | CodeudorWhereInput | Null,
              ?   demanda?: DemandaNullableRelationFilter | DemandaWhereInput | Null,
              ?   deudor?: DeudorNullableRelationFilter | DeudorWhereInput | Null,
              ?   facturas?: FacturaListRelationFilter,
              ?   notas?: NotaListRelationFilter,
              ?   procesos?: ProcesoListRelationFilter,
              ?   tareas?: TaskListRelationFilter
                },
                data: {
                  fecha: new Date("2024-10-01T05:00:00.000Z"),
                  revisado: false,
                  ultimaActuacion: {
                    connectOrCreate: {
                      where: {
                        idRegActuacion: 2032095810
                      },
                      create: {
                        idRegActuacion: 2032095810,
                        llaveProceso: "11001400306120240082400",
                        consActuacion: 8,
                        fechaActuacion: new Date("2024-10-01T05:00:00.000Z"),
                        actuacion: "Recepción memorial",
                        anotacion: "NOTIFICACION",
                        fechaInicial: null,
                        fechaFinal: null,
                        fechaRegistro: new Date("2024-10-01T05:00:00.000Z"),
                        codRegla: "00                              ",
                        conDocumentos: false,
                        cant: 8,
                        isUltimaAct: true,
                        idProceso: 184795740,
                        createdAt: new Date("2024-10-01T05:00:00.000Z")
                      }
                    }
                  }
                }
              })

Unknown argument `mainId`. Available options are listed in green.
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
no hay saved date o la saved date es menor que incoming date
error al cambiar la carpeta y actualizar la ultima actuacion: PrismaClientValidationError: 
Invalid `prisma_1.client.carpeta.update()` invocation in
/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:108:39

  105 }
  106 async function updateCarpetaWithNewLastActuacion([object Object], ultimaActuacion,[object Object], numero,[object Object], id,[object Object], ,[object Object]) {
  107     try {
→ 108         await prisma_1.client.carpeta.update({
                where: {
                  mainId: {
                  ~~~~~~
                    numero: 671,
                    id: 31424482
                  },
              ?   numero?: Int,
              ?   AND?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   OR?: CarpetaWhereInput[],
              ?   NOT?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   id?: IntFilter | Int,
              ?   fecha?: DateTimeNullableFilter | DateTime | Null,
              ?   idProcesos?: IntNullableListFilter,
              ?   idRegUltimaAct?: IntNullableFilter | Int | Null,
              ?   llaveProceso?: StringFilter | String,
              ?   nombre?: StringFilter | String,
              ?   revisado?: BoolFilter | Boolean,
              ?   terminado?: BoolFilter | Boolean,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   category?: StringFilter | String,
              ?   tipoProceso?: StringFilter | String,
              ?   notasCount?: IntNullableFilter | Int | Null,
              ?   fechaUltimaRevision?: DateTimeNullableFilter | DateTime | Null,
              ?   ciudad?: StringNullableFilter | String | Null,
              ?   juzgadoTipo?: StringNullableFilter | String | Null,
              ?   juzgadoCiudad?: StringNullableFilter | String | Null,
              ?   juzgadoId?: StringNullableFilter | String | Null,
              ?   ultimaActuacion?: ActuacionNullableRelationFilter | ActuacionWhereInput | Null,
              ?   juzgado?: JuzgadoNullableRelationFilter | JuzgadoWhereInput | Null,
              ?   codeudor?: CodeudorNullableRelationFilter | CodeudorWhereInput | Null,
              ?   demanda?: DemandaNullableRelationFilter | DemandaWhereInput | Null,
              ?   deudor?: DeudorNullableRelationFilter | DeudorWhereInput | Null,
              ?   facturas?: FacturaListRelationFilter,
              ?   notas?: NotaListRelationFilter,
              ?   procesos?: ProcesoListRelationFilter,
              ?   tareas?: TaskListRelationFilter
                },
                data: {
                  fecha: new Date("2024-10-02T05:00:00.000Z"),
                  revisado: false,
                  ultimaActuacion: {
                    connectOrCreate: {
                      where: {
                        idRegActuacion: 2032909000
                      },
                      create: {
                        idRegActuacion: 2032909000,
                        llaveProceso: "11001418903520240122000",
                        consActuacion: 5,
                        fechaActuacion: new Date("2024-10-02T05:00:00.000Z"),
                        actuacion: "Devolución Oficina Judicial para Reparto",
                        anotacion: null,
                        fechaInicial: null,
                        fechaFinal: null,
                        fechaRegistro: new Date("2024-10-02T05:00:00.000Z"),
                        codRegla: "00                              ",
                        conDocumentos: false,
                        cant: 5,
                        isUltimaAct: true,
                        idProceso: 196519750,
                        createdAt: new Date("2024-10-02T05:00:00.000Z")
                      }
                    }
                  }
                }
              })

Unknown argument `mainId`. Available options are listed in green.
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
no hay saved date o la saved date es menor que incoming date
error al cambiar la carpeta y actualizar la ultima actuacion: PrismaClientValidationError: 
Invalid `prisma_1.client.carpeta.update()` invocation in
/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:108:39

  105 }
  106 async function updateCarpetaWithNewLastActuacion([object Object], ultimaActuacion,[object Object], numero,[object Object], id,[object Object], ,[object Object]) {
  107     try {
→ 108         await prisma_1.client.carpeta.update({
                where: {
                  mainId: {
                  ~~~~~~
                    numero: 685,
                    id: 79763063
                  },
              ?   numero?: Int,
              ?   AND?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   OR?: CarpetaWhereInput[],
              ?   NOT?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   id?: IntFilter | Int,
              ?   fecha?: DateTimeNullableFilter | DateTime | Null,
              ?   idProcesos?: IntNullableListFilter,
              ?   idRegUltimaAct?: IntNullableFilter | Int | Null,
              ?   llaveProceso?: StringFilter | String,
              ?   nombre?: StringFilter | String,
              ?   revisado?: BoolFilter | Boolean,
              ?   terminado?: BoolFilter | Boolean,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   category?: StringFilter | String,
              ?   tipoProceso?: StringFilter | String,
              ?   notasCount?: IntNullableFilter | Int | Null,
              ?   fechaUltimaRevision?: DateTimeNullableFilter | DateTime | Null,
              ?   ciudad?: StringNullableFilter | String | Null,
              ?   juzgadoTipo?: StringNullableFilter | String | Null,
              ?   juzgadoCiudad?: StringNullableFilter | String | Null,
              ?   juzgadoId?: StringNullableFilter | String | Null,
              ?   ultimaActuacion?: ActuacionNullableRelationFilter | ActuacionWhereInput | Null,
              ?   juzgado?: JuzgadoNullableRelationFilter | JuzgadoWhereInput | Null,
              ?   codeudor?: CodeudorNullableRelationFilter | CodeudorWhereInput | Null,
              ?   demanda?: DemandaNullableRelationFilter | DemandaWhereInput | Null,
              ?   deudor?: DeudorNullableRelationFilter | DeudorWhereInput | Null,
              ?   facturas?: FacturaListRelationFilter,
              ?   notas?: NotaListRelationFilter,
              ?   procesos?: ProcesoListRelationFilter,
              ?   tareas?: TaskListRelationFilter
                },
                data: {
                  fecha: new Date("2024-10-02T05:00:00.000Z"),
                  revisado: false,
                  ultimaActuacion: {
                    connectOrCreate: {
                      where: {
                        idRegActuacion: 2032452570
                      },
                      create: {
                        idRegActuacion: 2032452570,
                        llaveProceso: "11001400301420240088700",
                        consActuacion: 7,
                        fechaActuacion: new Date("2024-10-02T05:00:00.000Z"),
                        actuacion: "Envío Comunicaciones",
                        anotacion: "ENVIO AUTO",
                        fechaInicial: null,
                        fechaFinal: null,
                        fechaRegistro: new Date("2024-10-02T05:00:00.000Z"),
                        codRegla: "00                              ",
                        conDocumentos: false,
                        cant: 7,
                        isUltimaAct: true,
                        idProceso: 195751920,
                        createdAt: new Date("2024-10-02T05:00:00.000Z")
                      }
                    }
                  }
                }
              })

Unknown argument `mainId`. Available options are listed in green.
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
no hay saved date o la saved date es menor que incoming date
error al cambiar la carpeta y actualizar la ultima actuacion: PrismaClientValidationError: 
Invalid `prisma_1.client.carpeta.update()` invocation in
/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:108:39

  105 }
  106 async function updateCarpetaWithNewLastActuacion([object Object], ultimaActuacion,[object Object], numero,[object Object], id,[object Object], ,[object Object]) {
  107     try {
→ 108         await prisma_1.client.carpeta.update({
                where: {
                  mainId: {
                  ~~~~~~
                    numero: 706,
                    id: 1014187160
                  },
              ?   numero?: Int,
              ?   AND?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   OR?: CarpetaWhereInput[],
              ?   NOT?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   id?: IntFilter | Int,
              ?   fecha?: DateTimeNullableFilter | DateTime | Null,
              ?   idProcesos?: IntNullableListFilter,
              ?   idRegUltimaAct?: IntNullableFilter | Int | Null,
              ?   llaveProceso?: StringFilter | String,
              ?   nombre?: StringFilter | String,
              ?   revisado?: BoolFilter | Boolean,
              ?   terminado?: BoolFilter | Boolean,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   category?: StringFilter | String,
              ?   tipoProceso?: StringFilter | String,
              ?   notasCount?: IntNullableFilter | Int | Null,
              ?   fechaUltimaRevision?: DateTimeNullableFilter | DateTime | Null,
              ?   ciudad?: StringNullableFilter | String | Null,
              ?   juzgadoTipo?: StringNullableFilter | String | Null,
              ?   juzgadoCiudad?: StringNullableFilter | String | Null,
              ?   juzgadoId?: StringNullableFilter | String | Null,
              ?   ultimaActuacion?: ActuacionNullableRelationFilter | ActuacionWhereInput | Null,
              ?   juzgado?: JuzgadoNullableRelationFilter | JuzgadoWhereInput | Null,
              ?   codeudor?: CodeudorNullableRelationFilter | CodeudorWhereInput | Null,
              ?   demanda?: DemandaNullableRelationFilter | DemandaWhereInput | Null,
              ?   deudor?: DeudorNullableRelationFilter | DeudorWhereInput | Null,
              ?   facturas?: FacturaListRelationFilter,
              ?   notas?: NotaListRelationFilter,
              ?   procesos?: ProcesoListRelationFilter,
              ?   tareas?: TaskListRelationFilter
                },
                data: {
                  fecha: new Date("2024-10-01T05:00:00.000Z"),
                  revisado: false,
                  ultimaActuacion: {
                    connectOrCreate: {
                      where: {
                        idRegActuacion: 2031996350
                      },
                      create: {
                        idRegActuacion: 2031996350,
                        llaveProceso: "11001418907120240124700",
                        consActuacion: 7,
                        fechaActuacion: new Date("2024-10-01T05:00:00.000Z"),
                        actuacion: "Elaboración de oficios",
                        anotacion: "LB - SE ELABORA OFICIO 1709 ORIP",
                        fechaInicial: null,
                        fechaFinal: null,
                        fechaRegistro: new Date("2024-10-01T05:00:00.000Z"),
                        codRegla: "00                              ",
                        conDocumentos: false,
                        cant: 7,
                        isUltimaAct: true,
                        idProceso: 198588490,
                        createdAt: new Date("2024-10-01T05:00:00.000Z")
                      }
                    }
                  }
                }
              })

Unknown argument `mainId`. Available options are listed in green.
1000
1000
1000
1000
1000
1000
no hay saved date o la saved date es menor que incoming date
error al cambiar la carpeta y actualizar la ultima actuacion: PrismaClientValidationError: 
Invalid `prisma_1.client.carpeta.update()` invocation in
/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:108:39

  105 }
  106 async function updateCarpetaWithNewLastActuacion([object Object], ultimaActuacion,[object Object], numero,[object Object], id,[object Object], ,[object Object]) {
  107     try {
→ 108         await prisma_1.client.carpeta.update({
                where: {
                  mainId: {
                  ~~~~~~
                    numero: 84,
                    id: 79108747
                  },
              ?   numero?: Int,
              ?   AND?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   OR?: CarpetaWhereInput[],
              ?   NOT?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   id?: IntFilter | Int,
              ?   fecha?: DateTimeNullableFilter | DateTime | Null,
              ?   idProcesos?: IntNullableListFilter,
              ?   idRegUltimaAct?: IntNullableFilter | Int | Null,
              ?   llaveProceso?: StringFilter | String,
              ?   nombre?: StringFilter | String,
              ?   revisado?: BoolFilter | Boolean,
              ?   terminado?: BoolFilter | Boolean,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   category?: StringFilter | String,
              ?   tipoProceso?: StringFilter | String,
              ?   notasCount?: IntNullableFilter | Int | Null,
              ?   fechaUltimaRevision?: DateTimeNullableFilter | DateTime | Null,
              ?   ciudad?: StringNullableFilter | String | Null,
              ?   juzgadoTipo?: StringNullableFilter | String | Null,
              ?   juzgadoCiudad?: StringNullableFilter | String | Null,
              ?   juzgadoId?: StringNullableFilter | String | Null,
              ?   ultimaActuacion?: ActuacionNullableRelationFilter | ActuacionWhereInput | Null,
              ?   juzgado?: JuzgadoNullableRelationFilter | JuzgadoWhereInput | Null,
              ?   codeudor?: CodeudorNullableRelationFilter | CodeudorWhereInput | Null,
              ?   demanda?: DemandaNullableRelationFilter | DemandaWhereInput | Null,
              ?   deudor?: DeudorNullableRelationFilter | DeudorWhereInput | Null,
              ?   facturas?: FacturaListRelationFilter,
              ?   notas?: NotaListRelationFilter,
              ?   procesos?: ProcesoListRelationFilter,
              ?   tareas?: TaskListRelationFilter
                },
                data: {
                  fecha: new Date("2024-10-02T05:00:00.000Z"),
                  revisado: false,
                  ultimaActuacion: {
                    connectOrCreate: {
                      where: {
                        idRegActuacion: 2033094380
                      },
                      create: {
                        idRegActuacion: 2033094380,
                        llaveProceso: "11001400303920170080001",
                        consActuacion: 162,
                        fechaActuacion: new Date("2024-10-02T05:00:00.000Z"),
                        actuacion: "Recepción expediente",
                        anotacion: "REMATE 28 DE OCTUBRE DE 2024 HORA: 10:00 AM///Daniel Amado",
                        fechaInicial: null,
                        fechaFinal: null,
                        fechaRegistro: new Date("2024-10-02T05:00:00.000Z"),
                        codRegla: "00                              ",
                        conDocumentos: false,
                        cant: 162,
                        isUltimaAct: true,
                        idProceso: 50508600,
                        createdAt: new Date("2024-10-02T05:00:00.000Z")
                      }
                    }
                  }
                }
              })

Unknown argument `mainId`. Available options are listed in green.
1000
1000
1000
Error: 81638681: 500 Internal Server Error{}
    at fetcher (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:35:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async AsyncGenerateActuaciones (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:77:34)
    at async main (/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:185:22)
1000
1000
1000
no hay saved date o la saved date es menor que incoming date
error al cambiar la carpeta y actualizar la ultima actuacion: PrismaClientValidationError: 
Invalid `prisma_1.client.carpeta.update()` invocation in
/home/cachorro_cami/Projects/com/rsasesorjuridico/api/dist/actuaciones.js:108:39

  105 }
  106 async function updateCarpetaWithNewLastActuacion([object Object], ultimaActuacion,[object Object], numero,[object Object], id,[object Object], ,[object Object]) {
  107     try {
→ 108         await prisma_1.client.carpeta.update({
                where: {
                  mainId: {
                  ~~~~~~
                    numero: 235,
                    id: 52189873
                  },
              ?   numero?: Int,
              ?   AND?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   OR?: CarpetaWhereInput[],
              ?   NOT?: CarpetaWhereInput | CarpetaWhereInput[],
              ?   id?: IntFilter | Int,
              ?   fecha?: DateTimeNullableFilter | DateTime | Null,
              ?   idProcesos?: IntNullableListFilter,
              ?   idRegUltimaAct?: IntNullableFilter | Int | Null,
              ?   llaveProceso?: StringFilter | String,
              ?   nombre?: StringFilter | String,
              ?   revisado?: BoolFilter | Boolean,
              ?   terminado?: BoolFilter | Boolean,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   category?: StringFilter | String,
              ?   tipoProceso?: StringFilter | String,
              ?   notasCount?: IntNullableFilter | Int | Null,
              ?   fechaUltimaRevision?: DateTimeNullableFilter | DateTime | Null,
              ?   ciudad?: StringNullableFilter | String | Null,
              ?   juzgadoTipo?: StringNullableFilter | String | Null,
              ?   juzgadoCiudad?: StringNullableFilter | String | Null,
              ?   juzgadoId?: StringNullableFilter | String | Null,
              ?   ultimaActuacion?: ActuacionNullableRelationFilter | ActuacionWhereInput | Null,
              ?   juzgado?: JuzgadoNullableRelationFilter | JuzgadoWhereInput | Null,
              ?   codeudor?: CodeudorNullableRelationFilter | CodeudorWhereInput | Null,
              ?   demanda?: DemandaNullableRelationFilter | DemandaWhereInput | Null,
              ?   deudor?: DeudorNullableRelationFilter | DeudorWhereInput | Null,
              ?   facturas?: FacturaListRelationFilter,
              ?   notas?: NotaListRelationFilter,
              ?   procesos?: ProcesoListRelationFilter,
              ?   tareas?: TaskListRelationFilter
                },
                data: {
                  fecha: new Date("2024-10-03T05:00:00.000Z"),
                  revisado: false,
                  ultimaActuacion: {
                    connectOrCreate: {
                      where: {
                        idRegActuacion: 2033093580
                      },
                      create: {
                        idRegActuacion: 2033093580,
                        llaveProceso: "11001400302520170090300",
                        consActuacion: 142,
                        fechaActuacion: new Date("2024-10-03T05:00:00.000Z"),
                        actuacion: "Traslado Liquidación Credito Art. 446 C.G.P.",
                        anotacion: "L - P LUGO ",
                        fechaInicial: new Date("2024-10-04T05:00:00.000Z"),
                        fechaFinal: new Date("2024-10-08T05:00:00.000Z"),
                        fechaRegistro: new Date("2024-10-02T05:00:00.000Z"),
                        codRegla: "00                              ",
                        conDocumentos: false,
                        cant: 142,
                        isUltimaAct: true,
                        idProceso: 112048180,
                        createdAt: new Date("2024-10-02T05:00:00.000Z")
                      }
                    }
                  }
                }
              })

Unknown argument `mainId`. Available options are listed in green.
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
